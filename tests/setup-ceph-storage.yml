---
- name: Playbook for configuring fake storage on Ceph hosts
  hosts: osds
  become: true
  tasks:
  - name: Ensure xfsprogs is installed on localhost
    package:
      name: xfsprogs
      state: present
      use: "{{ ansible_pkg_mgr }}"
    delegate_to: "{{ physical_host }}"
    run_once: True
  - name: Ensure xfsprogs is installed on containers
    package:
      name: xfsprogs
      state: present
  - name: Ensure Ceph fstab entriies are clear and file systems unmounted
    mount:
      name: "/srv/{{ container_name }}_{{ item }}"
      src: "/opt/{{ container_name }}_{{ item }}.img"
      fstype: xfs
      opts: 'loop,noatime,nodiratime,nobarrier,logbufs=8'
      passno: 0
      dump: 0
      state: absent
    with_items:
      - 'drive1'
      - 'drive2'
      - 'drive3'
      - 'journ1'
    register: mount_status
    until: mount_status | success
    retries: 5
    delay: 2
    delegate_to: "{{ physical_host }}"
  - name: Clean up files if present
    file:
      state: absent
      path: "/opt/{{ container_name }}_{{ item }}.img"
    with_items:
      - drive1
      - drive2
      - drive3
      - journ1
    delegate_to: "{{ physical_host }}"
  - name: Create directory for Ceph Files
    file:
      state: directory
      path: "/mnt/{{ item }}"
    with_items:
      - drive1
      - drive2
      - drive3
      - journ1
  - name: Create sparse Ceph files
    shell: "fallocate -l 10G /opt/{{ container_name }}_{{ item }}.img"
    args:
      creates: "/opt/{{ container_name }}_{{ item }}.img"
    with_items:
      - drive1
      - drive2
      - drive3
      - journ1
    register: ceph_create
    delegate_to: "{{ physical_host }}"
  - name: Format Ceph files
    filesystem:
      fstype: xfs
      opts: "-K"
      dev: "/opt/{{ container_name }}_{{ item }}.img"
    when: ceph_create | changed
    with_items:
      - drive1
      - drive2
      - drive3
      - journ1
    delegate_to: "{{ physical_host }}"
  - name: Create the Ceph fstab entries and mount the file systems
    mount:
      name: "/srv/{{ container_name }}_{{ item }}"
      src: "/opt/{{ container_name }}_{{ item }}.img"
      fstype: xfs
      opts: 'loop,noatime,nodiratime,nobarrier,logbufs=8'
      passno: 0
      dump: 0
      state: mounted
    with_items:
      - 'drive1'
      - 'drive2'
      - 'drive3'
      - 'journ1'
    register: mount_status
    until: mount_status | success
    retries: 5
    delay: 2
    delegate_to: "{{ physical_host }}"
  - name: Get block devices
    shell: "lsblk | grep {{ container_name }}_{{ item }} | awk '{print $2}'"
    with_items:
      - "drive1"
      - "drive2"
      - "drive3"
      - "journ1"
    register: block_devs
    delegate_to: "{{ physical_host }}"
  - name: Ceph extra lxc config
    lxc_container:
      name: "{{ container_name }}"
      container_config:
        - "lxc.aa_profile = unconfined"
        - "lxc.cgroup.devices.allow = b {{ block_devs.results[0].stdout }} rwm"
        - "lxc.cgroup.devices.allow = b {{ block_devs.results[1].stdout }} rwm"
        - "lxc.cgroup.devices.allow = b {{ block_devs.results[2].stdout }} rwm"
        - "lxc.cgroup.devices.allow = b {{ block_devs.results[3].stdout }} rwm"
    delegate_to: "{{ physical_host }}"
  - name: Wait for container connectivity
    wait_for_connection:
      connect_timeout: "{{ lxc_container_wait_params.connect_timeout | default(omit) }}"
      delay: "{{ lxc_container_wait_params.delay | default(omit) }}"
      sleep: "{{ lxc_container_wait_params.sleep | default(omit) }}"
      timeout: "{{ lxc_container_wait_params.timeout | default(omit) }}"
  - name: Mknod on loopback devices
    shell: "mknod -m 666 /dev/{{ item.item }} b {{ item.stdout.split(':')[0] }} {{ item.stdout.split(':')[1] }}"
    with_items: "{{ block_devs.results }}"
    failed_when: false
  - name: Ensure Ceph fstab entriies are clear and file systems unmounted
    mount:
      name: "/mnt/{{ item }}"
      src: "/dev/{{ item }}"
      fstype: xfs
      state: mounted
#      opts: 'rw,relatime,attr2,nobarrier,inode64,logbufs=8,noquota'
    with_items:
      - 'drive1'
      - 'drive2'
      - 'drive3'
      - 'journ1'
    register: mount_status
    until: mount_status | success
    retries: 5
    delay: 2
  - name: Ensure permissions are setup
    file:
      state: directory
      mode: 777
      path: "/mnt/{{ item }}"
    with_items:
      - drive1
      - drive2
      - drive3
      - journ1
  vars_files:
    - test-vars.yml

